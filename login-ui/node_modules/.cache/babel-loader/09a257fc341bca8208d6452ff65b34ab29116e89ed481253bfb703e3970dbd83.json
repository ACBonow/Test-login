{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonow\\\\Desktop\\\\Teste-Login\\\\login-ui\\\\src\\\\components\\\\home\\\\RecoveryPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { NavLink, Navigate } from 'react-router-dom';\nimport { Button, Form, Grid, Segment, Message, Statistic } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { LoginApi } from '../misc/LoginApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecoveryPassword() {\n  _s();\n  const Auth = useAuth();\n  const isLoggedIn = Auth.userIsAuthenticated();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else if (name === 'cpf') {\n      setCpf(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!(email && name && cpf && newPassword)) {\n      setIsError(true);\n      setErrorMessage('Please, inform all fields!');\n      return;\n    }\n    const user = {\n      email,\n      name,\n      cpf,\n      newPassword\n    };\n    console.log(user); // Adicione esta linha\n\n    try {\n      const response = await LoginApi.recoveryPassword(user);\n      const {\n        id,\n        name,\n        role\n      } = response.data;\n      const authdata = window.btoa(email + ':' + newPassword);\n      const authenticatedUser = {\n        id,\n        name,\n        role,\n        authdata\n      };\n      Auth.userLogin(authenticatedUser);\n      setEmail('');\n      setName('');\n      setCpf('');\n      setNewPassword('');\n      setIsError(false);\n      setErrorMessage('');\n    } catch (error) {\n      handleLogError(error);\n      if (error.response && error.response.data) {\n        const errorData = error.response.data;\n        let errorMessage = 'Invalid fields';\n        if (errorData.status === 409) {\n          errorMessage = errorData.message;\n        } else if (errorData.status === 400) {\n          errorMessage = errorData.errors[0].defaultMessage;\n        }\n        setIsError(true);\n        setErrorMessage(errorMessage);\n      }\n    }\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Statistic.Label, {\n          children: \"Recovery Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Segment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            autoFocus: true,\n            name: \"email\",\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"name\",\n            icon: \"address card\",\n            iconPosition: \"left\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"cpf\",\n            icon: \"id card\",\n            iconPosition: \"left\",\n            placeholder: \"CPF\",\n            value: cpf,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"newPassword\",\n            icon: \"lock\",\n            iconPosition: \"left\",\n            placeholder: \"New Password\",\n            type: \"password\",\n            value: newPassword,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            fluid: true,\n            size: \"large\",\n            children: \"Recover Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [`Remembered your password? `, /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          color: \"teal\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n_s(RecoveryPassword, \"mGmVwEIl4wsHsiQWJ0BYF65SmNY=\", false, function () {\n  return [useAuth];\n});\n_c = RecoveryPassword;\nexport default RecoveryPassword;\nvar _c;\n$RefreshReg$(_c, \"RecoveryPassword\");","map":{"version":3,"names":["React","useState","NavLink","Navigate","Button","Form","Grid","Segment","Message","Statistic","useAuth","LoginApi","handleLogError","jsxDEV","_jsxDEV","RecoveryPassword","_s","Auth","isLoggedIn","userIsAuthenticated","email","setEmail","name","setName","cpf","setCpf","newPassword","setNewPassword","isError","setIsError","errorMessage","setErrorMessage","handleInputChange","e","value","handleSubmit","preventDefault","user","console","log","response","recoveryPassword","id","role","data","authdata","window","btoa","authenticatedUser","userLogin","error","errorData","status","message","errors","defaultMessage","to","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","children","Column","style","maxWidth","size","onSubmit","Label","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","color","negative","_c","$RefreshReg$"],"sources":["C:/Users/bonow/Desktop/Teste-Login/login-ui/src/components/home/RecoveryPassword.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { NavLink, Navigate } from 'react-router-dom'\r\nimport {Button, Form, Grid, Segment, Message, Statistic} from 'semantic-ui-react'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport { LoginApi } from '../misc/LoginApi'\r\nimport { handleLogError } from '../misc/Helpers'\r\n\r\nfunction RecoveryPassword() {\r\n  const Auth = useAuth()\r\n  const isLoggedIn = Auth.userIsAuthenticated()\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [cpf, setCpf] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [isError, setIsError] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleInputChange = (e, { name, value }) => {\r\n    if (name === 'email') {\r\n      setEmail(value)\r\n    } else if (name === 'name') {\r\n      setName(value)\r\n    } else if (name === 'cpf') {\r\n      setCpf(value)\r\n    } else if (name === 'newPassword') {\r\n      setNewPassword(value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!(email && name && cpf && newPassword)) {\r\n      setIsError(true)\r\n      setErrorMessage('Please, inform all fields!')\r\n      return\r\n    }\r\n\r\n    const user = { email, name, cpf, newPassword }\r\n\r\n    console.log(user) // Adicione esta linha\r\n\r\n    try {\r\n      const response = await LoginApi.recoveryPassword(user)\r\n      const { id, name, role } = response.data\r\n      const authdata = window.btoa(email + ':' + newPassword)\r\n      const authenticatedUser = { id, name, role, authdata }\r\n\r\n      Auth.userLogin(authenticatedUser)\r\n\r\n      setEmail('')\r\n      setName('')\r\n      setCpf('')\r\n      setNewPassword('')\r\n      setIsError(false)\r\n      setErrorMessage('')\r\n    } catch (error) {\r\n      handleLogError(error)\r\n      if (error.response && error.response.data) {\r\n        const errorData = error.response.data\r\n        let errorMessage = 'Invalid fields'\r\n        if (errorData.status === 409) {\r\n          errorMessage = errorData.message\r\n        } else if (errorData.status === 400) {\r\n          errorMessage = errorData.errors[0].defaultMessage\r\n        }\r\n        setIsError(true)\r\n        setErrorMessage(errorMessage)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n      <Grid textAlign='center'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Statistic.Label>Recovery Password</Statistic.Label>\r\n            <Segment>\r\n              <Form.Input\r\n                  fluid\r\n                  autoFocus\r\n                  name='email'\r\n                  icon='user'\r\n                  iconPosition='left'\r\n                  placeholder='Email'\r\n                  value={email}\r\n                  onChange={handleInputChange}\r\n              />\r\n              <Form.Input\r\n                  fluid\r\n                  name='name'\r\n                  icon='address card'\r\n                  iconPosition='left'\r\n                  placeholder='Name'\r\n                  value={name}\r\n                  onChange={handleInputChange}\r\n              />\r\n              <Form.Input\r\n                  fluid\r\n                  name='cpf'\r\n                  icon='id card'\r\n                  iconPosition='left'\r\n                  placeholder='CPF'\r\n                  value={cpf}\r\n                  onChange={handleInputChange}\r\n              />\r\n              <Form.Input\r\n                  fluid\r\n                  name='newPassword'\r\n                  icon='lock'\r\n                  iconPosition='left'\r\n                  placeholder='New Password'\r\n                  type='password'\r\n                  value={newPassword}\r\n                  onChange={handleInputChange}\r\n              />\r\n              <Button color='blue' fluid size='large'>Recover Password</Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>{`Remembered your password? `}\r\n            <NavLink to=\"/login\" color='teal'>Login</NavLink>\r\n          </Message>\r\n          {isError && <Message negative>{errorMessage}</Message>}\r\n        </Grid.Column>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default RecoveryPassword"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}