{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonow\\\\Desktop\\\\Teste-Login(recoveryFuncionando)\\\\Teste-Login\\\\login-ui\\\\src\\\\components\\\\misc\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react'; // Importa o pacote React\nimport { Navigate } from 'react-router-dom'; // Importa o componente Navigate do pacote react-router-dom para a navegação\nimport { useAuth } from '../context/AuthContext'; // Importa o hook useAuth do contexto de autenticação\n//Este arquivo JavaScript define o componente PrivateRoute, que é um componente de rota de alto nível usado para\n// proteger rotas que só devem ser acessíveis por usuários autenticados. Ele usa o contexto de autenticação para\n// verificar se o usuário está autenticado. Se o usuário estiver autenticado, ele renderiza os componentes filhos;\n// caso contrário, ele redireciona o usuário para a página de login.\n\n// Define o componente PrivateRoute\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  children\n}) {\n  _s();\n  const {\n    userIsAuthenticated\n  } = useAuth(); // Obtenha a função userIsAuthenticated do contexto de autenticação\n  // Se o usuário estiver autenticado, renderiza os componentes filhos, caso contrário, redireciona para a página de login\n  return userIsAuthenticated() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 45\n  }, this);\n}\n_s(PrivateRoute, \"BtMeSK7MmmPS7cbhOTyhZVQ5wVM=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute; // Exporta o componente PrivateRoutedefault PrivateRoute\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","userIsAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bonow/Desktop/Teste-Login(recoveryFuncionando)/Teste-Login/login-ui/src/components/misc/PrivateRoute.js"],"sourcesContent":["import React from 'react' // Importa o pacote React\nimport { Navigate } from 'react-router-dom' // Importa o componente Navigate do pacote react-router-dom para a navegação\nimport { useAuth } from '../context/AuthContext' // Importa o hook useAuth do contexto de autenticação\n//Este arquivo JavaScript define o componente PrivateRoute, que é um componente de rota de alto nível usado para\n// proteger rotas que só devem ser acessíveis por usuários autenticados. Ele usa o contexto de autenticação para\n// verificar se o usuário está autenticado. Se o usuário estiver autenticado, ele renderiza os componentes filhos;\n// caso contrário, ele redireciona o usuário para a página de login.\n\n// Define o componente PrivateRoute\nfunction PrivateRoute({ children }) {\n  const { userIsAuthenticated } = useAuth() // Obtenha a função userIsAuthenticated do contexto de autenticação\n  // Se o usuário estiver autenticado, renderiza os componentes filhos, caso contrário, redireciona para a página de login\n  return userIsAuthenticated() ? children : <Navigate to=\"/login\" />\n}\n\nexport default PrivateRoute // Exporta o componente PrivateRoutedefault PrivateRoute"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO,EAAC;AAC1B,SAASC,QAAQ,QAAQ,kBAAkB,EAAC;AAC5C,SAASC,OAAO,QAAQ,wBAAwB,EAAC;AACjD;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAoB,CAAC,GAAGN,OAAO,CAAC,CAAC,EAAC;EAC1C;EACA,OAAOM,mBAAmB,CAAC,CAAC,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpE;AAACN,EAAA,CAJQF,YAAY;EAAA,QACaH,OAAO;AAAA;AAAAY,EAAA,GADhCT,YAAY;AAMrB,eAAeA,YAAY,EAAC;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}