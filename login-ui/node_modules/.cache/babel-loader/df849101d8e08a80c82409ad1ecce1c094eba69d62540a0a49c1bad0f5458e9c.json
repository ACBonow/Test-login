{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../../Constants';\nexport const bookApi = {\n  authenticate,\n  signup,\n  numberOfUsers,\n  numberOfBooks,\n  getUsers,\n  deleteUser,\n  getBooks,\n  deleteBook,\n  addBook\n};\nfunction authenticate(username, password) {\n  return instance.post('/auth/authenticate', {\n    username,\n    password\n  }, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers');\n}\nfunction numberOfBooks() {\n  return instance.get('/public/numberOfBooks');\n}\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users';\n  return instance.get(url, {\n    headers: {\n      'Authorization': basicAuth(user)\n    }\n  });\n}\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: {\n      'Authorization': basicAuth(user)\n    }\n  });\n}\nfunction getBooks(user, text) {\n  const url = text ? `/api/books?text=${text}` : '/api/books';\n  return instance.get(url, {\n    headers: {\n      'Authorization': basicAuth(user)\n    }\n  });\n}\nfunction deleteBook(user, isbn) {\n  return instance.delete(`/api/books/${isbn}`, {\n    headers: {\n      'Authorization': basicAuth(user)\n    }\n  });\n}\nfunction addBook(user, book) {\n  return instance.post('/api/books', book, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': basicAuth(user)\n    }\n  });\n}\n\n// -- Axios\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n});\n\n// -- Helper functions\n\nfunction basicAuth(user) {\n  return `Basic ${user.authdata}`;\n}","map":{"version":3,"names":["axios","config","bookApi","authenticate","signup","numberOfUsers","numberOfBooks","getUsers","deleteUser","getBooks","deleteBook","addBook","username","password","instance","post","headers","user","get","url","basicAuth","delete","text","isbn","book","create","baseURL","API_BASE_URL","authdata"],"sources":["C:/Users/bonow/Desktop/Teste-Login/book-ui/src/components/misc/BookApi.js"],"sourcesContent":["import axios from 'axios'\nimport { config } from '../../Constants'\n\nexport const bookApi = {\n  authenticate,\n  signup,\n  numberOfUsers,\n  numberOfBooks,\n  getUsers,\n  deleteUser,\n  getBooks,\n  deleteBook,\n  addBook\n}\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/authenticate', { username, password }, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers')\n}\n\nfunction numberOfBooks() {\n  return instance.get('/public/numberOfBooks')\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users'\n  return instance.get(url, {\n    headers: { 'Authorization': basicAuth(user) }\n  })\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: { 'Authorization': basicAuth(user) }\n  })\n}\n\nfunction getBooks(user, text) {\n  const url = text ? `/api/books?text=${text}` : '/api/books'\n  return instance.get(url, {\n    headers: { 'Authorization': basicAuth(user) }\n  })\n}\n\nfunction deleteBook(user, isbn) {\n  return instance.delete(`/api/books/${isbn}`, {\n    headers: { 'Authorization': basicAuth(user) }\n  })\n}\n\nfunction addBook(user, book) {\n  return instance.post('/api/books', book, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': basicAuth(user)\n    }\n  })\n}\n\n// -- Axios\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n})\n\n// -- Helper functions\n\nfunction basicAuth(user) {\n  return `Basic ${user.authdata}`\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AAExC,OAAO,MAAMC,OAAO,GAAG;EACrBC,YAAY;EACZC,MAAM;EACNC,aAAa;EACbC,aAAa;EACbC,QAAQ;EACRC,UAAU;EACVC,QAAQ;EACRC,UAAU;EACVC;AACF,CAAC;AAED,SAASR,YAAYA,CAACS,QAAQ,EAAEC,QAAQ,EAAE;EACxC,OAAOC,QAAQ,CAACC,IAAI,CAAC,oBAAoB,EAAE;IAAEH,QAAQ;IAAEC;EAAS,CAAC,EAAE;IACjEG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;AACJ;AAEA,SAASZ,MAAMA,CAACa,IAAI,EAAE;EACpB,OAAOH,QAAQ,CAACC,IAAI,CAAC,cAAc,EAAEE,IAAI,EAAE;IACzCD,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;AACJ;AAEA,SAASX,aAAaA,CAAA,EAAG;EACvB,OAAOS,QAAQ,CAACI,GAAG,CAAC,uBAAuB,CAAC;AAC9C;AAEA,SAASZ,aAAaA,CAAA,EAAG;EACvB,OAAOQ,QAAQ,CAACI,GAAG,CAAC,uBAAuB,CAAC;AAC9C;AAEA,SAASX,QAAQA,CAACU,IAAI,EAAEL,QAAQ,EAAE;EAChC,MAAMO,GAAG,GAAGP,QAAQ,GAAI,cAAaA,QAAS,EAAC,GAAG,YAAY;EAC9D,OAAOE,QAAQ,CAACI,GAAG,CAACC,GAAG,EAAE;IACvBH,OAAO,EAAE;MAAE,eAAe,EAAEI,SAAS,CAACH,IAAI;IAAE;EAC9C,CAAC,CAAC;AACJ;AAEA,SAAST,UAAUA,CAACS,IAAI,EAAEL,QAAQ,EAAE;EAClC,OAAOE,QAAQ,CAACO,MAAM,CAAE,cAAaT,QAAS,EAAC,EAAE;IAC/CI,OAAO,EAAE;MAAE,eAAe,EAAEI,SAAS,CAACH,IAAI;IAAE;EAC9C,CAAC,CAAC;AACJ;AAEA,SAASR,QAAQA,CAACQ,IAAI,EAAEK,IAAI,EAAE;EAC5B,MAAMH,GAAG,GAAGG,IAAI,GAAI,mBAAkBA,IAAK,EAAC,GAAG,YAAY;EAC3D,OAAOR,QAAQ,CAACI,GAAG,CAACC,GAAG,EAAE;IACvBH,OAAO,EAAE;MAAE,eAAe,EAAEI,SAAS,CAACH,IAAI;IAAE;EAC9C,CAAC,CAAC;AACJ;AAEA,SAASP,UAAUA,CAACO,IAAI,EAAEM,IAAI,EAAE;EAC9B,OAAOT,QAAQ,CAACO,MAAM,CAAE,cAAaE,IAAK,EAAC,EAAE;IAC3CP,OAAO,EAAE;MAAE,eAAe,EAAEI,SAAS,CAACH,IAAI;IAAE;EAC9C,CAAC,CAAC;AACJ;AAEA,SAASN,OAAOA,CAACM,IAAI,EAAEO,IAAI,EAAE;EAC3B,OAAOV,QAAQ,CAACC,IAAI,CAAC,YAAY,EAAES,IAAI,EAAE;IACvCR,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEI,SAAS,CAACH,IAAI;IACjC;EACF,CAAC,CAAC;AACJ;;AAEA;;AAEA,MAAMH,QAAQ,GAAGd,KAAK,CAACyB,MAAM,CAAC;EAC5BC,OAAO,EAAEzB,MAAM,CAACkB,GAAG,CAACQ;AACtB,CAAC,CAAC;;AAEF;;AAEA,SAASP,SAASA,CAACH,IAAI,EAAE;EACvB,OAAQ,SAAQA,IAAI,CAACW,QAAS,EAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}