{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonow\\\\Desktop\\\\Teste-Login(recoveryFuncionando)\\\\Teste-Login\\\\login-ui\\\\src\\\\components\\\\home\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Importa o pacote React e o hook useState\nimport { NavLink, Navigate } from 'react-router-dom'; // Importa os componentes NavLink e Navigate do pacote react-router-dom\nimport { Button, Form, Grid, Segment, Message, Statistic } from 'semantic-ui-react'; // Importa os componentes do pacote semantic-ui-react\nimport { useAuth } from '../context/AuthContext'; // Importa o hook useAuth do contexto de autenticação\nimport { LoginApi } from '../misc/LoginApi'; // Importa a API de login\nimport { handleLogError } from '../misc/Helpers'; // Importa a função de manipulação de erros\n//Este arquivo define o componente Signup em JavaScript, que é a página de cadastro do aplicativo. Ele permite que os\n// usuários insiram suas informações para criar uma nova conta. Se o cadastro for bem-sucedido, o usuário será\n// autenticado e redirecionado para a página inicial. Caso contrário, uma mensagem de erro será exibida.\n\n// Funções para validar o email e a senha\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\nfunction validatePassword(password) {\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n  return re.test(password);\n}\n\n// Define o componente Signup\nfunction Signup() {\n  _s();\n  const Auth = useAuth(); // Obtenha o contexto de autenticação\n  const isLoggedIn = Auth.userIsAuthenticated(); // Verifique se o usuário está autenticado\n\n  // Define o estado para o email, senha, nome, cpf, se ocorreu um erro e a mensagem de erro\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Manipulador para mudanças nos campos de entrada\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    if (name === 'email') {\n      setEmail(value.toLowerCase()); // Transforma o email em minúsculas\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'name') {\n      setName(value.replace(/\\b\\w/g, l => l.toUpperCase())); // Transforma a primeira letra de cada palavra do nome em maiúscula\n    } else if (name === 'cpf') {\n      setCpf(value);\n    }\n  };\n\n  // Manipulador para o envio do formulário\n  const handleSubmit = async e => {\n    e.preventDefault(); // Previne o comportamento padrão do formulário\n\n    // Verifica se o email e a senha são válidos\n    if (!validateEmail(email)) {\n      setIsError(true); // Define o erro como verdadeiro\n      setErrorMessage('Please, enter a valid email!');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setIsError(true); // Define o erro como verdadeiro\n      setErrorMessage('Password must have at least 8 characters, including one uppercase letter, one lowercase letter, and one number.');\n      return;\n    }\n\n    // Verifica se o email, senha, nome e cpf foram fornecidos\n    if (!(email && password && name && cpf)) {\n      setIsError(true); // Define o erro como verdadeiro\n      setErrorMessage('Please, inform all fields!');\n      return;\n    }\n    const user = {\n      email,\n      password,\n      name,\n      cpf\n    }; // Define o usuário\n\n    try {\n      // Tenta cadastrar o usuário\n      const response = await LoginApi.signup(user);\n      const {\n        id,\n        name,\n        role\n      } = response.data;\n      const authdata = window.btoa(email + ':' + password);\n      const authenticatedUser = {\n        id,\n        name,\n        role,\n        authdata\n      };\n      Auth.userLogin(authenticatedUser); // Faz login do usuário\n\n      // Limpa o estado\n      setEmail('');\n      setPassword('');\n      setName('');\n      setCpf('');\n      setIsError(false);\n      setErrorMessage('');\n    } catch (error) {\n      handleLogError(error); // Manipula qualquer erro que ocorra\n      if (error.response && error.response.data) {\n        const errorData = error.response.data;\n        let errorMessage = 'Invalid fields';\n        if (errorData.status === 409) {\n          errorMessage = errorData.message;\n        } else if (errorData.status === 500) {\n          errorMessage = errorData.message;\n        } else if (errorData.status === 400) {\n          errorMessage = errorData.errors[0].defaultMessage;\n        }\n        setIsError(true); // Define o erro como verdadeiro\n        setErrorMessage(errorMessage);\n      }\n    }\n  };\n\n  // Se o usuário estiver autenticado, redireciona para a página inicial\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderiza o formulário de cadastro\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Statistic.Label, {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Segment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            autoFocus: true,\n            name: \"email\",\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"password\",\n            icon: \"lock\",\n            iconPosition: \"left\",\n            placeholder: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"name\",\n            icon: \"address card\",\n            iconPosition: \"left\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            name: \"cpf\",\n            icon: \"id card\",\n            iconPosition: \"left\",\n            placeholder: \"CPF (WITHOUT DOTS AND HYPHEN)\",\n            value: cpf,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            fluid: true,\n            size: \"large\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [`Already have an account? `, /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          color: \"teal\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [`Forgot your password? `, /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/recovery\",\n          color: \"teal\",\n          children: \"Recover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this);\n}\n_s(Signup, \"axAlQ9VS4kO2hh/XEBRjD8jclgg=\", false, function () {\n  return [useAuth];\n});\n_c = Signup;\nexport default Signup; // Exporta o componente Signup\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","NavLink","Navigate","Button","Form","Grid","Segment","Message","Statistic","useAuth","LoginApi","handleLogError","jsxDEV","_jsxDEV","validateEmail","email","re","test","String","toLowerCase","validatePassword","password","Signup","_s","Auth","isLoggedIn","userIsAuthenticated","setEmail","setPassword","name","setName","cpf","setCpf","isError","setIsError","errorMessage","setErrorMessage","handleInputChange","e","value","replace","l","toUpperCase","handleSubmit","preventDefault","user","response","signup","id","role","data","authdata","window","btoa","authenticatedUser","userLogin","error","errorData","status","message","errors","defaultMessage","to","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","children","Column","style","maxWidth","size","onSubmit","Label","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","color","negative","_c","$RefreshReg$"],"sources":["C:/Users/bonow/Desktop/Teste-Login(recoveryFuncionando)/Teste-Login/login-ui/src/components/home/Signup.js"],"sourcesContent":["import React, { useState } from 'react' // Importa o pacote React e o hook useState\nimport { NavLink, Navigate } from 'react-router-dom' // Importa os componentes NavLink e Navigate do pacote react-router-dom\nimport {Button, Form, Grid, Segment, Message, Statistic} from 'semantic-ui-react' // Importa os componentes do pacote semantic-ui-react\nimport { useAuth } from '../context/AuthContext' // Importa o hook useAuth do contexto de autenticação\nimport { LoginApi } from '../misc/LoginApi' // Importa a API de login\nimport { handleLogError } from '../misc/Helpers' // Importa a função de manipulação de erros\n//Este arquivo define o componente Signup em JavaScript, que é a página de cadastro do aplicativo. Ele permite que os\n// usuários insiram suas informações para criar uma nova conta. Se o cadastro for bem-sucedido, o usuário será\n// autenticado e redirecionado para a página inicial. Caso contrário, uma mensagem de erro será exibida.\n\n// Funções para validar o email e a senha\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction validatePassword(password) {\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n  return re.test(password);\n}\n\n// Define o componente Signup\nfunction Signup() {\n  const Auth = useAuth() // Obtenha o contexto de autenticação\n  const isLoggedIn = Auth.userIsAuthenticated() // Verifique se o usuário está autenticado\n\n  // Define o estado para o email, senha, nome, cpf, se ocorreu um erro e a mensagem de erro\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const [cpf, setCpf] = useState('')\n  const [isError, setIsError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // Manipulador para mudanças nos campos de entrada\n  const handleInputChange = (e, { name, value }) => {\n    if (name === 'email') {\n      setEmail(value.toLowerCase()) // Transforma o email em minúsculas\n    } else if (name === 'password') {\n      setPassword(value)\n    } else if (name === 'name') {\n      setName(value.replace(/\\b\\w/g, l => l.toUpperCase())) // Transforma a primeira letra de cada palavra do nome em maiúscula\n    } else if (name === 'cpf') {\n      setCpf(value)\n    }\n  }\n\n  // Manipulador para o envio do formulário\n  const handleSubmit = async (e) => {\n    e.preventDefault() // Previne o comportamento padrão do formulário\n\n    // Verifica se o email e a senha são válidos\n    if (!validateEmail(email)) {\n      setIsError(true) // Define o erro como verdadeiro\n      setErrorMessage('Please, enter a valid email!')\n      return\n    }\n\n    if (!validatePassword(password)) {\n      setIsError(true) // Define o erro como verdadeiro\n      setErrorMessage('Password must have at least 8 characters, including one uppercase letter, one lowercase letter, and one number.')\n      return\n    }\n\n    // Verifica se o email, senha, nome e cpf foram fornecidos\n    if (!(email && password && name && cpf)) {\n      setIsError(true) // Define o erro como verdadeiro\n      setErrorMessage('Please, inform all fields!')\n      return\n    }\n\n    const user = { email, password, name, cpf } // Define o usuário\n\n    try {\n      // Tenta cadastrar o usuário\n      const response = await LoginApi.signup(user)\n      const { id, name, role } = response.data\n      const authdata = window.btoa(email + ':' + password)\n      const authenticatedUser = { id, name, role, authdata }\n\n      Auth.userLogin(authenticatedUser) // Faz login do usuário\n\n      // Limpa o estado\n      setEmail('')\n      setPassword('')\n      setName('')\n      setCpf('')\n      setIsError(false)\n      setErrorMessage('')\n    } catch (error) {\n      handleLogError(error) // Manipula qualquer erro que ocorra\n      if (error.response && error.response.data) {\n        const errorData = error.response.data\n        let errorMessage = 'Invalid fields'\n        if (errorData.status === 409) {\n          errorMessage = errorData.message\n        } else if (errorData.status === 500) {\n          errorMessage = errorData.message\n        }else if (errorData.status === 400) {\n          errorMessage = errorData.errors[0].defaultMessage\n        }\n        setIsError(true) // Define o erro como verdadeiro\n        setErrorMessage(errorMessage)\n      }\n    }\n  }\n\n  // Se o usuário estiver autenticado, redireciona para a página inicial\n  if (isLoggedIn) {\n    return <Navigate to='/' />\n  }\n\n  // Renderiza o formulário de cadastro\n  return (\n      <Grid textAlign='center'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Statistic.Label>Sign up</Statistic.Label>\n            <Segment>\n              <Form.Input\n                  fluid\n                  autoFocus\n                  name='email'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Email'\n                  value={email}\n                  onChange={handleInputChange}\n              />\n              <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  value={password}\n                  onChange={handleInputChange}\n              />\n              <Form.Input\n                  fluid\n                  name='name'\n                  icon='address card'\n                  iconPosition='left'\n                  placeholder='Name'\n                  value={name}\n                  onChange={handleInputChange}\n              />\n              <Form.Input\n                  fluid\n                  name='cpf'\n                  icon='id card'\n                  iconPosition='left'\n                  placeholder='CPF (WITHOUT DOTS AND HYPHEN)'\n                  value={cpf}\n                  onChange={handleInputChange}\n              />\n              <Button color='blue' fluid size='large'>Signup</Button>\n            </Segment>\n          </Form>\n          {isError && <Message negative>{errorMessage}</Message>}\n          <Message>{`Already have an account? `}\n            <NavLink to=\"/login\" color='teal'>Login</NavLink>\n          </Message>\n          <Message>{`Forgot your password? `}\n            <NavLink to=\"/recovery\" color='teal'>Recover</NavLink>\n          </Message>\n        </Grid.Column>\n      </Grid>\n  )\n}\n\nexport default Signup // Exporta o componente Signup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}